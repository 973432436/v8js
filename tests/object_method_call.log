
---- EXPECTED OUTPUT
array(2) {
  [0]=>
  string(4) "arg1"
  [1]=>
  string(4) "arg2"
}
array(3) {
  [0]=>
  bool(true)
  [1]=>
  bool(false)
  [2]=>
  int(1234567890)
}
array(3) {
  [0]=>
  float(3.14)
  [1]=>
  int(42)
  [2]=>
  NULL
}
test4.js:1: TypeError: Testing::mytest() expects at least 2 parameters, 0 given
array(4) {
  [0]=>
  string(4) "arg1"
  [1]=>
  string(4) "arg2"
  [2]=>
  string(4) "arg3"
  [3]=>
  string(9) "extra_arg"
}

TEST: Javascript Date -> PHP DateTime
======================================
Mon Sep 08 1975 09:00:00 GMT+0200 (EET)
array(2) {
  [0]=>
  object(DateTime)#4 (3) {
    ["date"]=>
    string(19) "1975-09-08 09:00:00"
    ["timezone_type"]=>
    int(1)
    ["timezone"]=>
    string(6) "+02:00"
  }
  [1]=>
  string(3) "foo"
}
array(3) {
  [0]=>
  object(V8Object)#4 (2) {
    ["mytest"]=>
    object(V8Function)#6 (0) {
    }
    ["foo"]=>
    string(8) "ORIGINAL"
  }
  [1]=>
  array(3) {
    [0]=>
    int(1)
    [1]=>
    int(2)
    [2]=>
    int(3)
  }
  [2]=>
  array(3) {
    [0]=>
    string(3) "foo"
    [1]=>
    string(3) "bar"
    [2]=>
    object(V8Object)#5 (2) {
      ["mytest"]=>
      object(V8Function)#6 (0) {
      }
      ["foo"]=>
      string(8) "ORIGINAL"
    }
  }
}
===EOF===
---- ACTUAL OUTPUT
array(2) {
  [0]=>
  string(4) "arg1"
  [1]=>
  string(4) "arg2"
}
array(3) {
  [0]=>
  bool(true)
  [1]=>
  bool(false)
  [2]=>
  int(1234567890)
}
array(3) {
  [0]=>
  float(3.14)
  [1]=>
  int(42)
  [2]=>
  NULL
}
test4.js:1: TypeError: Testing::mytest() expects at least 2 parameters, 0 given
array(4) {
  [0]=>
  string(4) "arg1"
  [1]=>
  string(4) "arg2"
  [2]=>
  string(4) "arg3"
  [3]=>
  string(9) "extra_arg"
}

TEST: Javascript Date -> PHP DateTime
======================================
Mon Sep 08 1975 09:00:00 GMT-0700 (PDT)
array(2) {
  [0]=>
  object(DateTime)#4 (3) {
    ["date"]=>
    string(19) "1975-09-08 09:00:00"
    ["timezone_type"]=>
    int(1)
    ["timezone"]=>
    string(6) "-07:00"
  }
  [1]=>
  string(3) "foo"
}
array(3) {
  [0]=>
  object(V8Object)#4 (2) {
    ["mytest"]=>
    object(V8Function)#6 (0) {
    }
    ["foo"]=>
    string(8) "ORIGINAL"
  }
  [1]=>
  array(3) {
    [0]=>
    int(1)
    [1]=>
    int(2)
    [2]=>
    int(3)
  }
  [2]=>
  array(3) {
    [0]=>
    string(3) "foo"
    [1]=>
    string(3) "bar"
    [2]=>
    object(V8Object)#5 (2) {
      ["mytest"]=>
      object(V8Function)#6 (0) {
      }
      ["foo"]=>
      string(8) "ORIGINAL"
    }
  }
}
===EOF===
---- FAILED
